@using System.Web.Optimization;
@model GameStore.Client.Models.GameViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}


<div class="container my-background my-width mt-4">
    <h2>Create</h2>

    @using (Html.BeginForm("Create", "Games", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal background">
            <h4>@Html.DisplayFor(model => model.Name)</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", @min = 1980, @max = 2020 } })
                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>*@


            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="custom-control custom-radio ml-3">
                    <input type="radio" onclick="chooseOption()" class="custom-control-input" id="image_file" name="images" checked />
                    <label class="custom-control-label" for="image_file">Download image from desktop</label>
                </div>

                <div class="custom-control custom-radio ml-3 mb-2">
                    <input type="radio" onclick="chooseOption()" class="custom-control-input" id="image_html" name="images" />
                    <label class="custom-control-label" for="image_html">Download image from internet</label>
                </div>
                <div class="col-md-10">
                    <input type="file" id="image" name="image" class="form-control" />
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control d-none my_image_id" } })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select name="Genre" class="form-control">
                        @foreach (var item in ViewBag.Genres)
                        {
                            <option>@item</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Developer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <select name="Developer" class="form-control">
                        @foreach (var item in ViewBag.Developers)
                        {
                            <option>@item</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

    <div class="d-flex justify-content-end">
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@Scripts.Render("~/Script/image-option")